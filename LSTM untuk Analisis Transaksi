import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
import numpy as np

# Contoh data transaksi, setiap transaksi memiliki 10 fitur
# Asumsikan data disusun dalam urutan waktu (sekuensial)
data_transaksi = np.random.rand(1000, 10, 10)  # 1000 transaksi, 10 waktu, 10 fitur per transaksi
label_transaksi = np.random.randint(2, size=(1000, 1))  # Label 0 atau 1 untuk klasifikasi anomali

# Membangun model LSTM
model = Sequential([
    LSTM(128, input_shape=(10, 10), return_sequences=True),  # LSTM dengan 128 unit, memproses data sekuensial
    Dropout(0.2),
    LSTM(64, return_sequences=False),
    Dropout(0.2),
    Dense(32, activation='relu'),
    Dense(1, activation='sigmoid')  # Output untuk deteksi anomali (biner)
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Melatih model
model.fit(data_transaksi, label_transaksi, epochs=10, batch_size=32)

# Prediksi berdasarkan data baru
data_baru = np.random.rand(1, 10, 10)  # Data transaksi baru
prediksi = model.predict(data_baru)

if prediksi > 0.5:
    print("Transaksi dicurigai sebagai ancaman")
else:
    print("Transaksi aman")
